  # - platform: template
  #   sensors:
  #     jeff_home_status:
  #       friendly_name: 'Jeff Home Status'
  #       value_template: "{{is_state('device_tracker.jeffs_xs_tracker','home') or (is_state('device_tracker.jeffsphone','home') and is_state('device_tracker.jeffs_phone_2','home'))}}"
  # - platform: template
  #   sensors:
  #     jen_home_status:
  #       friendly_name: 'Jen Home Status'
  #       value_template: "{{is_state('device_tracker.jennifers_xs_max_tracker','home') or (is_state('device_tracker.jennifers_xs_max','home') and is_state('device_tracker.jennifersxsmax','home'))}}"
  # - platform: template
  #   sensors:
  #     ansley_home_status:
  #       friendly_name: 'Ansley Home Status'
  #       value_template: "{{is_state('device_tracker.ansleys_xr_tracker','home') or (is_state('device_tracker.eye_phone','home') and is_state('device_tracker.ansleys_xr_2','home'))}}"
  # - platform: template
  #   sensors:
  #     brinley_home_status:
  #       friendly_name: 'Brinley Home Status'
  #       value_template: "{{(is_state('device_tracker.brinleythebest','home') and is_state('device_tracker.brinleythebest_2','home'))}}"
  - platform: template
    sensors:
      anyone_home:
        friendly_name: 'Home Status'
        # value_template: "{% if is_state('sensor.jeff_home_status', 'True') or is_state('sensor.jen_home_status', 'True') or is_state('sensor.ansley_home_status', 'True')-%}home{%else%}not_home{% endif %}"
        value_template: "{% if is_state('group.family', 'home')-%}home{%else%}not_home{% endif %}"
  - platform: template
    sensors:
      garage_status:
        friendly_name: 'Jeff''s garage door status'
        value_template: '{% if states.cover.jeff_garage_door %}
            {% if states.cover.jeff_garage_door.state == "open" %}
              Open
            {% elif states.cover.jeff_garage_door.state == "closed" %}
              Closed
            {% elif states.cover.jeff_garage_door.state == "opening" %}
              Opening
            {% elif states.cover.jeff_garage_door.state == "closing" %}
              Closing
            {% elif states.cover.jeff_garage_door.state == "offline" %}
              Offline
            {% else %}
              Unknown
            {% endif %}
            {% else %}
            n/a
            {% endif %}'
      garage_car_present:
        friendly_name: 'Jeff''s car in garage'
        value_template: '{% if states.cover.jeff_garage_door %}
            {% if states.cover.jeff_garage_door.state == "open" %}
              n/a
            {% elif states.binary_sensor.og_jeff_vehicle.state == "on" %}
              Yes
            {% else %}
              No
            {% endif %}
            {% else %}
            n/a
            {% endif %}'
      garage2_status:
        friendly_name: 'Jen''s garage door status'
        value_template: '{% if states.cover.jen_garage_door %}
            {% if states.cover.jen_garage_door.state == "open" %}
              Open
            {% elif states.cover.jen_garage_door.state == "closed" %}
              Closed
            {% elif states.cover.jen_garage_door.state == "opening" %}
              Opening
            {% elif states.cover.jen_garage_door.state == "closing" %}
              Closing
            {% elif states.cover.jen_garage_door.state == "offline" %}
              Offline
            {% else %}
              Unknown
            {% endif %}
            {% else %}
            n/a
            {% endif %}'
      garage2_car_present:
        friendly_name: 'Jen''s car in garage'
        value_template: '{% if states.cover.jen_garage_door %}
            {% if states.cover.jen_garage_door.state == "open" %}
              n/a
            {% elif states.binary_sensor.og_jen_vehicle.state == "on" %}
              Yes
            {% else %}
              No
            {% endif %}
            {% else %}
            n/a
            {% endif %}'
  - platform: template
    sensors:
      alarm_status:
        friendly_name: 'Alarm Status'
        value_template: "{% if is_state('sensor.ser2sock_10000_alarm_panel_display', 'ARMED ***AWAY***** ALL SECURE **') or is_state('sensor.ser2sock_10000_alarm_panel_display', 'ARMED ***STAY***                ') or is_state('sensor.ser2sock_10000_alarm_panel_display', '***NIGHT-STAY***                ') %}Armed{%else%}Disarmed{% endif %}"

### teslamate
#### Elektra (car 1)
  - platform: template
    sensors:
      tesla_est_battery_range_mi:
        friendly_name: Estimated Range (mi)
        unit_of_measurement: mi
        icon_template: mdi:gauge
        value_template: >
          {{ (states('sensor.tesla_est_battery_range_km') | float / 1.609) | round(2) }}

      tesla_rated_battery_range_mi:
        friendly_name: Rated Range (mi)
        unit_of_measurement: mi
        icon_template: mdi:gauge
        value_template: >
          {{ (states('sensor.tesla_rated_battery_range_km') | float / 1.609) | round(2) }}

      tesla_ideal_battery_range_mi:
        friendly_name: Ideal Range (mi)
        unit_of_measurement: mi
        icon_template: mdi:gauge
        value_template: >
          {{ (states('sensor.tesla_ideal_battery_range_km') | float / 1.609) | round(2) }}

      tesla_odometer_mi:
        friendly_name: Odometer (mi)
        unit_of_measurement: mi
        icon_template: mdi:counter
        value_template: >
          {{ (states('sensor.tesla_odometer') | float / 1.609) | round(2) }}

      tesla_speed_mph:
        friendly_name: Speed (MPH)
        unit_of_measurement: mph
        icon_template: mdi:speedometer
        value_template: >
          {{ (states('sensor.tesla_speed') | float / 1.609) | round(2) }}

      tesla_elevation_ft:
        friendly_name: Elevation (ft)
        unit_of_measurement: ft
        icon_template: mdi:image-filter-hdr
        value_template: >
          {{ (states('sensor.tesla_elevation') | float * 3.2808 ) | round(2) }}

#### KARR (car 2)
  - platform: template
    sensors:
      tesla2_est_battery_range_mi:
        friendly_name: Estimated Range (mi)
        unit_of_measurement: mi
        icon_template: mdi:gauge
        value_template: >
          {{ (states('sensor.tesla2_est_battery_range_km') | float / 1.609) | round(2) }}

      tesla2_rated_battery_range_mi:
        friendly_name: Rated Range (mi)
        unit_of_measurement: mi
        icon_template: mdi:gauge
        value_template: >
          {{ (states('sensor.tesla2_rated_battery_range_km') | float / 1.609) | round(2) }}

      tesla2_ideal_battery_range_mi:
        friendly_name: Ideal Range (mi)
        unit_of_measurement: mi
        icon_template: mdi:gauge
        value_template: >
          {{ (states('sensor.tesla2_ideal_battery_range_km') | float / 1.609) | round(2) }}

      tesla2_odometer_mi:
        friendly_name: Odometer (mi)
        unit_of_measurement: mi
        icon_template: mdi:counter
        value_template: >
          {{ (states('sensor.tesla2_odometer') | float / 1.609) | round(2) }}

      tesla2_speed_mph:
        friendly_name: Speed (MPH)
        unit_of_measurement: mph
        icon_template: mdi:speedometer
        value_template: >
          {{ (states('sensor.tesla2_speed') | float / 1.609) | round(2) }}

      tesla2_elevation_ft:
        friendly_name: Elevation (ft)
        unit_of_measurement: ft
        icon_template: mdi:image-filter-hdr
        value_template: >
          {{ (states('sensor.tesla2_elevation') | float * 3.2808 ) | round(2) }}

#### Orion (car 3)
  - platform: template
    sensors:
      tesla3_est_battery_range_mi:
        friendly_name: Estimated Range (mi)
        unit_of_measurement: mi
        icon_template: mdi:gauge
        value_template: >
          {{ (states('sensor.tesla3_est_battery_range_km') | float / 1.609) | round(2) }}

      tesla3_rated_battery_range_mi:
        friendly_name: Rated Range (mi)
        unit_of_measurement: mi
        icon_template: mdi:gauge
        value_template: >
          {{ (states('sensor.tesla3_rated_battery_range_km') | float / 1.609) | round(2) }}

      tesla3_ideal_battery_range_mi:
        friendly_name: Ideal Range (mi)
        unit_of_measurement: mi
        icon_template: mdi:gauge
        value_template: >
          {{ (states('sensor.tesla3_ideal_battery_range_km') | float / 1.609) | round(2) }}

      tesla3_odometer_mi:
        friendly_name: Odometer (mi)
        unit_of_measurement: mi
        icon_template: mdi:counter
        value_template: >
          {{ (states('sensor.tesla3_odometer') | float / 1.609) | round(2) }}

      tesla3_speed_mph:
        friendly_name: Speed (MPH)
        unit_of_measurement: mph
        icon_template: mdi:speedometer
        value_template: >
          {{ (states('sensor.tesla3_speed') | float / 1.609) | round(2) }}

      tesla3_elevation_ft:
        friendly_name: Elevation (ft)
        unit_of_measurement: ft
        icon_template: mdi:image-filter-hdr
        value_template: >
          {{ (states('sensor.tesla3_elevation') | float * 3.2808 ) | round(2) }}

# esprescense
  # - platform: mqtt_room
  #   # device_id: "jeffsphone"
  #   device_id: !env_var JEFF_PHONE_IRK
  #   name: 'Jeff Phone'
  #   state_topic: 'espresense/rooms'
  #   timeout: 30
  #   away_timeout: 120 # number of seconds after which the enitity will get status not_home
  # - platform: mqtt_room
  #   device_id: !env_var JEFF_WATCH_IRK
  #   name: 'Jeff Watch'
  #   state_topic: 'espresense/rooms'
  #   timeout: 30
  #   away_timeout: 120 # number of seconds after which the enitity will get status not_home
  # - platform: mqtt_room
  #   # device_id: "JensPhone"
  #   device_id: !env_var JEN_PHONE_IRK
  #   name: 'Jen Phone'
  #   state_topic: 'espresense/rooms'
  #   timeout: 30
  #   away_timeout: 120 # number of seconds after which the enitity will get status not_home
  # - platform: mqtt_room
  #   device_id: !env_var JEN_WATCH_IRK
  #   name: 'Jen Watch'
  #   state_topic: 'espresense/rooms'
  #   timeout: 30
  #   away_timeout: 120 # number of seconds after which the enitity will get status not_home
  # - platform: mqtt_room
  #   device_id: "AnsleysPhone"
  #   # device_id: !env_var ANSLEY_PHONE_IRK
  #   name: 'Ansley Phone'
  #   state_topic: 'espresense/rooms'
  #   timeout: 30
  #   away_timeout: 120 # number of seconds after which the enitity will get status not_home
  # - platform: mqtt_room
  #   device_id: !env_var ANSLEY_WATCH_IRK
  #   name: 'Ansley Watch'
  #   state_topic: 'espresense/rooms'
  #   timeout: 30
  #   away_timeout: 120 # number of seconds after which the enitity will get status not_home
  # - platform: mqtt_room
  #   # device_id: "BrinleyTheBest"
  #   device_id: !env_var BRINLEY_PHONE_IRK
  #   name: 'Brinley Phone'
  #   state_topic: 'espresense/rooms'
  #   timeout: 30
  #   away_timeout: 120 # number of seconds after which the enitity will get status not_home

# weekday sensor
  - platform: template
    sensors:
      weekday:
        friendly_name: "Weekday"
        value_template: >-
          {{ now().weekday() < 5 }}
