  - platform: darksky
    name: Weather
    api_key: !secret darksky-api_key
    forecast:
      - 0
    monitored_conditions:
      - summary
      - nearest_storm_distance
      - precip_intensity
      - precip_probability
      - temperature
      - temperature_high
      - temperature_low
      - wind_speed
      - wind_bearing
      - visibility
      - apparent_temperature
      - minutely_summary
      - hourly_summary
      - daily_summary
      - dew_point
      - cloud_cover
      - humidity
  # - platform: xfinity
  #   username: !secret xfinity_email
  #   password: !secret xfinity_password
  - platform: filter
    name: "Weather Wind Speed (Filtered)"
    entity_id: sensor.weather_wind_speed
    filters:
        - filter: outlier
          window_size: 4
          radius: 6.0
        - filter: lowpass
          time_constant: 3
          precision: 2
  - platform: filter
    name: "Smartweather Brightness (Filtered)"
    entity_id: sensor.smartweather_brightness
    filters:
      # - filter: outlier
      #   window_size: 4
      #   radius: 6.0
      - filter: lowpass
        time_constant: 5
        precision: 0
      # - filter: time_simple_moving_average
      #   window_size: 00:15
      #   precision: 0

  - platform: command_line
    name: "Blue Iris Profile"
    command: "python3 /config/shell/getBIProfile.py"
  - platform: template
    sensors:
      jeff_home_status:
        friendly_name: 'Jeff Home Status'
        value_template: "{{is_state('device_tracker.jeffs_xs_tracker','home') or (is_state('device_tracker.jeffsphone','home') and is_state('device_tracker.jeffs_phone_2','home'))}}"
  - platform: template
    sensors:
      jen_home_status:
        friendly_name: 'Jen Home Status'
        value_template: "{{is_state('device_tracker.jennifers_xs_max_tracker','home') or (is_state('device_tracker.jennifers_xs_max','home') and is_state('device_tracker.jennifersxsmax','home'))}}"
  - platform: template
    sensors:
      ansley_home_status:
        friendly_name: 'Ansley Home Status'
        value_template: "{{is_state('device_tracker.ansleys_xr_tracker','home') or (is_state('device_tracker.eye_phone','home') and is_state('device_tracker.ansleys_xr_2','home'))}}"
  - platform: template
    sensors:
      brinley_home_status:
        friendly_name: 'Brinley Home Status'
        value_template: "{{(is_state('device_tracker.brinleythebest','home') and is_state('device_tracker.brinleythebest_2','home'))}}"
  - platform: template
    sensors:
      anyone_home:
        friendly_name: 'Home Status'
        # value_template: "{% if is_state('sensor.jeff_home_status', 'True') or is_state('sensor.jen_home_status', 'True') or is_state('sensor.ansley_home_status', 'True')-%}home{%else%}not_home{% endif %}"
        value_template: "{% if is_state('group.family', 'home')-%}home{%else%}not_home{% endif %}"
  - platform: template
    sensors:
      garage_status:
        friendly_name: 'Jeff''s garage door status'
        value_template: '{% if states.cover.jeff_garage_door %}
            {% if states.cover.jeff_garage_door.state == "open" %}
              Open
            {% elif states.cover.jeff_garage_door.state == "closed" %}
              Closed
            {% elif states.cover.jeff_garage_door.state == "opening" %}
              Opening
            {% elif states.cover.jeff_garage_door.state == "closing" %}
              Closing
            {% elif states.cover.jeff_garage_door.state == "offline" %}
              Offline
            {% else %}
              Unknown
            {% endif %}
            {% else %}
            n/a
            {% endif %}'
      garage_car_present:
        friendly_name: 'Jeff''s car in garage'
        value_template: '{% if states.cover.jeff_garage_door %}
            {% if states.cover.jeff_garage_door.state == "open" %}
              n/a
            {% elif states.binary_sensor.og_jeff_vehicle.state == "on" %}
              Yes
            {% else %}
              No
            {% endif %}
            {% else %}
            n/a
            {% endif %}'
      garage2_status:
        friendly_name: 'Jen''s garage door status'
        value_template: '{% if states.cover.jen_garage_door %}
            {% if states.cover.jen_garage_door.state == "open" %}
              Open
            {% elif states.cover.jen_garage_door.state == "closed" %}
              Closed
            {% elif states.cover.jen_garage_door.state == "opening" %}
              Opening
            {% elif states.cover.jen_garage_door.state == "closing" %}
              Closing
            {% elif states.cover.jen_garage_door.state == "offline" %}
              Offline
            {% else %}
              Unknown
            {% endif %}
            {% else %}
            n/a
            {% endif %}'
      garage2_car_present:
        friendly_name: 'Jen''s car in garage'
        value_template: '{% if states.cover.jen_garage_door %}
            {% if states.cover.jen_garage_door.state == "open" %}
              n/a
            {% elif states.binary_sensor.og_jen_vehicle.state == "on" %}
              Yes
            {% else %}
              No
            {% endif %}
            {% else %}
            n/a
            {% endif %}'
  - platform: template
    sensors:
      alarm_status:
        friendly_name: 'Alarm Status'
        value_template: "{% if is_state('sensor.alarm_panel_display', 'ARMED ***AWAY***** ALL SECURE **') or is_state('sensor.alarm_panel_display', 'ARMED ***STAY***                ') or is_state('sensor.alarm_panel_display', '***NIGHT-STAY***                ') %}Armed{%else%}Disarmed{% endif %}"

### teslamate
#### sulaco (car 1)
  - platform: template
    sensors:
      tesla_est_battery_range_mi:
        friendly_name: Estimated Range (mi)
        unit_of_measurement: mi
        icon_template: mdi:gauge
        value_template: >
          {{ (states('sensor.tesla_est_battery_range_km') | float / 1.609) | round(2) }}

      tesla_rated_battery_range_mi:
        friendly_name: Rated Range (mi)
        unit_of_measurement: mi
        icon_template: mdi:gauge
        value_template: >
          {{ (states('sensor.tesla_rated_battery_range_km') | float / 1.609) | round(2) }}

      tesla_ideal_battery_range_mi:
        friendly_name: Ideal Range (mi)
        unit_of_measurement: mi
        icon_template: mdi:gauge
        value_template: >
          {{ (states('sensor.tesla_ideal_battery_range_km') | float / 1.609) | round(2) }}

      tesla_odometer_mi:
        friendly_name: Odometer (mi)
        unit_of_measurement: mi
        icon_template: mdi:counter
        value_template: >
          {{ (states('sensor.tesla_odometer') | float / 1.609) | round(2) }}

      tesla_speed_mph:
        friendly_name: Speed (MPH)
        unit_of_measurement: mph
        icon_template: mdi:speedometer
        value_template: >
          {{ (states('sensor.tesla_speed') | float / 1.609) | round(2) }}

      tesla_elevation_ft:
        friendly_name: Elevation (ft)
        unit_of_measurement: ft
        icon_template: mdi:image-filter-hdr
        value_template: >
          {{ (states('sensor.tesla_elevation') | float * 3.2808 ) | round(2) }}

  - platform: mqtt
    name: tesla_display_name
    state_topic: "teslamate/cars/1/display_name"
    icon: mdi:car

  - platform: mqtt
    name: tesla_state
    state_topic: "teslamate/cars/1/state"
    icon: mdi:car-connected

  - platform: mqtt
    name: tesla_since
    state_topic: "teslamate/cars/1/since"
    device_class: timestamp
    icon: mdi:clock-outline

  - platform: mqtt
    name: tesla_version
    state_topic: "teslamate/cars/1/version"
    icon: mdi:alphabetical

  - platform: mqtt
    name: tesla_update_version
    state_topic: "teslamate/cars/1/update_version"
    icon: mdi:alphabetical

  - platform: mqtt
    name: tesla_model
    state_topic: "teslamate/cars/1/model"

  - platform: mqtt
    name: tesla_trim_badging
    state_topic: "teslamate/cars/1/trim_badging"
    icon: mdi:shield-star-outline

  - platform: mqtt
    name: tesla_exterior_color
    state_topic: "teslamate/cars/1/exterior_color"
    icon: mdi:palette

  - platform: mqtt
    name: tesla_wheel_type
    state_topic: "teslamate/cars/1/wheel_type"

  - platform: mqtt
    name: tesla_spoiler_type
    state_topic: "teslamate/cars/1/spoiler_type"
    icon: mdi:car-sports

  - platform: mqtt
    name: tesla_geofence
    state_topic: "teslamate/cars/1/geofence"
    icon: mdi:earth

  - platform: mqtt
    name: tesla_latitude
    state_topic: "teslamate/cars/1/latitude"
    unit_of_measurement: °
    icon: mdi:crosshairs-gps

  - platform: mqtt
    name: tesla_longitude
    state_topic: "teslamate/cars/1/longitude"
    unit_of_measurement: °
    icon: mdi:crosshairs-gps

  - platform: mqtt
    name: tesla_shift_state
    state_topic: "teslamate/cars/1/shift_state"
    icon: mdi:car-shift-pattern

  - platform: mqtt
    name: tesla_power
    state_topic: "teslamate/cars/1/power"
    device_class: power
    unit_of_measurement: W
    icon: mdi:flash

  - platform: mqtt
    name: tesla_speed
    state_topic: "teslamate/cars/1/speed"
    unit_of_measurement: "km/h"
    icon: mdi:speedometer

  - platform: mqtt
    name: tesla_heading
    state_topic: "teslamate/cars/1/heading"
    unit_of_measurement: °
    icon: mdi:compass

  - platform: mqtt
    name: tesla_elevation
    state_topic: "teslamate/cars/1/elevation"
    unit_of_measurement: m
    icon: mdi:image-filter-hdr

  - platform: mqtt
    name: tesla_inside_temp
    state_topic: "teslamate/cars/1/inside_temp"
    device_class: temperature
    unit_of_measurement: °C
    icon: mdi:thermometer-lines

  - platform: mqtt
    name: tesla_outside_temp
    state_topic: "teslamate/cars/1/outside_temp"
    device_class: temperature
    unit_of_measurement: °C
    icon: mdi:thermometer-lines

  - platform: mqtt
    name: tesla_odometer
    state_topic: "teslamate/cars/1/odometer"
    unit_of_measurement: km
    icon: mdi:counter

  - platform: mqtt
    name: tesla_est_battery_range_km
    state_topic: "teslamate/cars/1/est_battery_range_km"
    unit_of_measurement: km
    icon: mdi:gauge

  - platform: mqtt
    name: tesla_rated_battery_range_km
    state_topic: "teslamate/cars/1/rated_battery_range_km"
    unit_of_measurement: km
    icon: mdi:gauge

  - platform: mqtt
    name: tesla_ideal_battery_range_km
    state_topic: "teslamate/cars/1/ideal_battery_range_km"
    unit_of_measurement: km
    icon: mdi:gauge

  - platform: mqtt
    name: tesla_battery_level
    state_topic: "teslamate/cars/1/battery_level"
    device_class: battery
    unit_of_measurement: "%"
    icon: mdi:battery-80
    
  - platform: mqtt
    name: tesla_usable_battery_level
    state_topic: "teslamate/cars/1/usable_battery_level"
    unit_of_measurement: "%"
    icon: mdi:battery-80

  - platform: mqtt
    name: tesla_charge_energy_added
    state_topic: "teslamate/cars/1/charge_energy_added"
    device_class: energy
    unit_of_measurement: kWh
    icon: mdi:battery-charging

  - platform: mqtt
    name: tesla_charge_limit_soc
    state_topic: "teslamate/cars/1/charge_limit_soc"
    unit_of_measurement: "%"
    icon: mdi:battery-charging-100

  - platform: mqtt
    name: tesla_charger_actual_current
    state_topic: "teslamate/cars/1/charger_actual_current"
    device_class: current
    unit_of_measurement: A
    icon: mdi:lightning-bolt

  - platform: mqtt
    name: tesla_charger_phases
    state_topic: "teslamate/cars/1/charger_phases"
    icon: mdi:sine-wave

  - platform: mqtt
    name: tesla_charger_power
    state_topic: "teslamate/cars/1/charger_power"
    device_class: power
    unit_of_measurement: kW
    icon: mdi:lightning-bolt

  - platform: mqtt
    name: tesla_charger_voltage
    state_topic: "teslamate/cars/1/charger_voltage"
    device_class: voltage
    unit_of_measurement: V
    icon: mdi:lightning-bolt

  - platform: mqtt
    name: tesla_scheduled_charging_start_time
    state_topic: "teslamate/cars/1/scheduled_charging_start_time"
    icon: mdi:clock-outline

  - platform: mqtt
    name: tesla_time_to_full_charge
    state_topic: "teslamate/cars/1/time_to_full_charge"
    unit_of_measurement: h
    icon: mdi:clock-outline

#### KARR (car 2)
  - platform: template
    sensors:
      tesla2_est_battery_range_mi:
        friendly_name: Estimated Range (mi)
        unit_of_measurement: mi
        icon_template: mdi:gauge
        value_template: >
          {{ (states('sensor.tesla2_est_battery_range_km') | float / 1.609) | round(2) }}

      tesla2_rated_battery_range_mi:
        friendly_name: Rated Range (mi)
        unit_of_measurement: mi
        icon_template: mdi:gauge
        value_template: >
          {{ (states('sensor.tesla2_rated_battery_range_km') | float / 1.609) | round(2) }}

      tesla2_ideal_battery_range_mi:
        friendly_name: Ideal Range (mi)
        unit_of_measurement: mi
        icon_template: mdi:gauge
        value_template: >
          {{ (states('sensor.tesla2_ideal_battery_range_km') | float / 1.609) | round(2) }}

      tesla2_odometer_mi:
        friendly_name: Odometer (mi)
        unit_of_measurement: mi
        icon_template: mdi:counter
        value_template: >
          {{ (states('sensor.tesla2_odometer') | float / 1.609) | round(2) }}

      tesla2_speed_mph:
        friendly_name: Speed (MPH)
        unit_of_measurement: mph
        icon_template: mdi:speedometer
        value_template: >
          {{ (states('sensor.tesla2_speed') | float / 1.609) | round(2) }}

      tesla2_elevation_ft:
        friendly_name: Elevation (ft)
        unit_of_measurement: ft
        icon_template: mdi:image-filter-hdr
        value_template: >
          {{ (states('sensor.tesla2_elevation') | float * 3.2808 ) | round(2) }}

  - platform: mqtt
    name: tesla2_display_name
    state_topic: "teslamate/cars/2/display_name"
    icon: mdi:car

  - platform: mqtt
    name: tesla2_state
    state_topic: "teslamate/cars/2/state"
    icon: mdi:car-connected

  - platform: mqtt
    name: tesla2_since
    state_topic: "teslamate/cars/2/since"
    device_class: timestamp
    icon: mdi:clock-outline

  - platform: mqtt
    name: tesla2_version
    state_topic: "teslamate/cars/2/version"
    icon: mdi:alphabetical

  - platform: mqtt
    name: tesla2_update_version
    state_topic: "teslamate/cars/2/update_version"
    icon: mdi:alphabetical

  - platform: mqtt
    name: tesla2_model
    state_topic: "teslamate/cars/2/model"

  - platform: mqtt
    name: tesla2_trim_badging
    state_topic: "teslamate/cars/2/trim_badging"
    icon: mdi:shield-star-outline

  - platform: mqtt
    name: tesla2_exterior_color
    state_topic: "teslamate/cars/2/exterior_color"
    icon: mdi:palette

  - platform: mqtt
    name: tesla2_wheel_type
    state_topic: "teslamate/cars/2/wheel_type"

  - platform: mqtt
    name: tesla2_spoiler_type
    state_topic: "teslamate/cars/2/spoiler_type"
    icon: mdi:car-sports

  - platform: mqtt
    name: tesla2_geofence
    state_topic: "teslamate/cars/2/geofence"
    icon: mdi:earth

  - platform: mqtt
    name: tesla2_latitude
    state_topic: "teslamate/cars/2/latitude"
    unit_of_measurement: °
    icon: mdi:crosshairs-gps

  - platform: mqtt
    name: tesla2_longitude
    state_topic: "teslamate/cars/2/longitude"
    unit_of_measurement: °
    icon: mdi:crosshairs-gps

  - platform: mqtt
    name: tesla2_shift_state
    state_topic: "teslamate/cars/2/shift_state"
    icon: mdi:car-shift-pattern

  - platform: mqtt
    name: tesla2_power
    state_topic: "teslamate/cars/2/power"
    device_class: power
    unit_of_measurement: W
    icon: mdi:flash

  - platform: mqtt
    name: tesla2_speed
    state_topic: "teslamate/cars/2/speed"
    unit_of_measurement: "km/h"
    icon: mdi:speedometer

  - platform: mqtt
    name: tesla2_heading
    state_topic: "teslamate/cars/2/heading"
    unit_of_measurement: °
    icon: mdi:compass

  - platform: mqtt
    name: tesla2_elevation
    state_topic: "teslamate/cars/2/elevation"
    unit_of_measurement: m
    icon: mdi:image-filter-hdr

  - platform: mqtt
    name: tesla2_inside_temp
    state_topic: "teslamate/cars/2/inside_temp"
    device_class: temperature
    unit_of_measurement: °C
    icon: mdi:thermometer-lines

  - platform: mqtt
    name: tesla2_outside_temp
    state_topic: "teslamate/cars/2/outside_temp"
    device_class: temperature
    unit_of_measurement: °C
    icon: mdi:thermometer-lines

  - platform: mqtt
    name: tesla2_odometer
    state_topic: "teslamate/cars/2/odometer"
    unit_of_measurement: km
    icon: mdi:counter

  - platform: mqtt
    name: tesla2_est_battery_range_km
    state_topic: "teslamate/cars/2/est_battery_range_km"
    unit_of_measurement: km
    icon: mdi:gauge

  - platform: mqtt
    name: tesla2_rated_battery_range_km
    state_topic: "teslamate/cars/2/rated_battery_range_km"
    unit_of_measurement: km
    icon: mdi:gauge

  - platform: mqtt
    name: tesla2_ideal_battery_range_km
    state_topic: "teslamate/cars/2/ideal_battery_range_km"
    unit_of_measurement: km
    icon: mdi:gauge

  - platform: mqtt
    name: tesla2_battery_level
    state_topic: "teslamate/cars/2/battery_level"
    device_class: battery
    unit_of_measurement: "%"
    icon: mdi:battery-80
    
  - platform: mqtt
    name: tesla2_usable_battery_level
    state_topic: "teslamate/cars/2/usable_battery_level"
    unit_of_measurement: "%"
    icon: mdi:battery-80

  - platform: mqtt
    name: tesla2_charge_energy_added
    state_topic: "teslamate/cars/2/charge_energy_added"
    device_class: energy
    unit_of_measurement: kWh
    icon: mdi:battery-charging

  - platform: mqtt
    name: tesla2_charge_limit_soc
    state_topic: "teslamate/cars/2/charge_limit_soc"
    unit_of_measurement: "%"
    icon: mdi:battery-charging-100

  - platform: mqtt
    name: tesla2_charger_actual_current
    state_topic: "teslamate/cars/2/charger_actual_current"
    device_class: current
    unit_of_measurement: A
    icon: mdi:lightning-bolt

  - platform: mqtt
    name: tesla2_charger_phases
    state_topic: "teslamate/cars/2/charger_phases"
    icon: mdi:sine-wave

  - platform: mqtt
    name: tesla2_charger_power
    state_topic: "teslamate/cars/2/charger_power"
    device_class: power
    unit_of_measurement: kW
    icon: mdi:lightning-bolt

  - platform: mqtt
    name: tesla2_charger_voltage
    state_topic: "teslamate/cars/2/charger_voltage"
    device_class: voltage
    unit_of_measurement: V
    icon: mdi:lightning-bolt

  - platform: mqtt
    name: tesla2_scheduled_charging_start_time
    state_topic: "teslamate/cars/2/scheduled_charging_start_time"
    icon: mdi:clock-outline

  - platform: mqtt
    name: tesla2_time_to_full_charge
    state_topic: "teslamate/cars/2/time_to_full_charge"
    unit_of_measurement: h
    icon: mdi:clock-outline

