homeassistant:
  # Name of the location where Home Assistant is running
  name: Home
  # Location required to calculate the time the sun rises and sets
  latitude: !secret latitude 
  longitude: !secret longitude 
  # Impacts weather/sunrise data (altitude above sea level in meters)
  elevation: 318
  # metric for Metric, imperial for Imperial
  unit_system: imperial
  # Pick yours from here: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones
  time_zone: America/New_York

# Packages
  packages:
    security: !include security.yaml

# Show links to resources in log and frontend
# introduction:

# Enables the frontend
frontend:
  javascript_version: latest

# Enables configuration UI
config:

http:
  # Uncomment this to add a password (recommended!)
  api_password: !secret http-api_password
  # Uncomment this if you are using SSL/TLS, running in Docker container, etc.
  base_url: !secret base_url
  server_port: 8133

# Checks for available updates
# Note: This component will send some information about your system to
# the developers to assist with development of Home Assistant.
# For more information, please see:
# https://home-assistant.io/blog/2016/10/25/explaining-the-updater/
updater:
  # Optional, allows Home Assistant developers to focus on popular components.
  # include_used_components: true

# Discover some devices automatically
discovery:
  ignore:
    - plex_mediaserver

# Allows you to issue voice commands from the frontend in enabled browsers
# conversation:

# Enables support for tracking state changes over time
history:

# persist states between restarts ??
recorder:
  purge_interval: 2
  purge_keep_days: 7

# View all events in a logbook
logbook:

# Track the sun
sun:

map:


ios:
  push:
    categories:
      - name: Alarm
        identifier: 'alarm'
        actions:
          - identifier: 'DISARM_ALARM'
            title: 'Disarm Alarm'
            activationMode: 'background'
            authenticationRequired: yes
            destructive: yes
      - name: garage
        identifier: 'garage'
        actions:
          - identifier: 'CLOSE_GARAGE'
            title: 'Close Jeff''s garage door'
            activationMode: 'background'
            authenticationRequired: yes
      - name: garage2
        identifier: 'garage2'
        actions:
          - identifier: 'CLOSE_GARAGE2'
            title: 'Close Jen''s garage door'
            activationMode: 'background'
            authenticationRequired: yes


# Custom UI Panels
# panel_custom:
#  - name: floorplan
#    sidebar_title: Floorplan
#    sidebar_icon: mdi:floor-plan
#    url_path: floorplan
#    config: !include config/floorplan.yaml


# device_tracker: !include config/device_tracker.yaml
# zone: !include config/zones.yaml
# scene: !include_dir_merge_list scenes
script: !include_dir_merge_named scripts
# python_script:
# input_boolean: !include config/input_boolean.yaml
# input_slider: !include config/input_slider.yaml
# sensor: !include config/sensors.yaml
# binary_sensor: !include config/binary_sensors.yaml
# switch: !include config/switches.yaml
automation: !include_dir_merge_list automation
# logbook: !include config/logbook.yaml
shell_command: !include shell/shell.yaml
# plant: !include config/plants.yaml
# media_player: !include config/media_players.yaml
# mqtt: !include config/mqtt.yaml
# rest_command: !include config/rest.yaml
# variable: !include config/variable.yaml
zone: !include config/zones.yaml

input_select:
  set_biprofile:
    name: "Set BI Profile"
    initial: "-"
    options:
      - "-"
      - "alert_day"
      - "alert_day_windy"
      - "alert_night"
      - "day"
      - "day_windy"
      - "night"

cover:
  platform: opengarage
  covers:
      garage:
        host:  !secret og-host_og-jeff
        device_key: !secret og-key
        name:  Jeff Garage Door
      garage2:
        host:  !secret og-host_og-jen
        device_key: !secret og-key
        name:  Jen Garage Door

input_boolean:
  previous_garage_open:
    name: Track if the garage was previously open
    initial: on
  previous_garage2_open:
    name: Track if the garage2 was previously open
    initial: on
  previous_garage_closed:
    name: Track if the garage was previously closed
    initial: on
  previous_garage2_closed:
    name: Track if the garage2 was previously closed
    initial: on

sensor:
  - platform: darksky
    name: Weather
    api_key: !secret darksky-api_key
    monitored_conditions:
      - summary
      - nearest_storm_distance
      - precip_intensity
      - precip_probability
      - temperature
      - temperature_max
      - temperature_min
      - wind_speed
      - wind_bearing
      - visibility
      - apparent_temperature
      - minutely_summary
      - hourly_summary
      - daily_summary
      - dew_point
      - cloud_cover
      - humidity
  - platform: yr
    name: yr
    monitored_conditions:
      - windSpeed
  - platform: ring
    monitored_conditions:
      - battery
      - last_activity
      - last_ding
      - last_motion
      - volume

  - platform: command_line
    name: "Blue Iris Profile"
    command: "python3 /config/shell/getBIProfile.py"

  - platform: template
    sensors:
      anyone_home:
        friendly_name: 'Home Status'
        value_template: "{% if is_state('device_tracker.jeff_phone', 'home') or is_state('device_tracker.jen_phone', 'home')-%}home{%else%}not_home{% endif %}"

  - platform: template
    sensors:
      garage_status:
        friendly_name: 'Jeff''s garage door status'
        value_template: '{% if states.cover.jeff_garage_door %}
            {% if states.cover.jeff_garage_door.attributes["door_state"] == "open" %}
              Open
            {% elif states.cover.jeff_garage_door.attributes["door_state"] == "closed" %}
              Closed
            {% elif states.cover.jeff_garage_door.attributes["door_state"] == "opening" %}
              Opening
            {% elif states.cover.jeff_garage_door.attributes["door_state"] == "closing" %}
              Closing
            {% elif states.cover.jeff_garage_door.attributes["door_state"] == "offline" %}
              Offline
            {% else %}
              Unknown
            {% endif %}
            {% else %}
            n/a
            {% endif %}'
      garage_car_present:
        friendly_name: 'Jeff''s car in garage'
        value_template: '{% if states.cover.jeff_garage_door %}
            {% if states.cover.jeff_garage_door.state == "open" %}
              n/a
            {% elif ((states.cover.jeff_garage_door.attributes["distance_sensor"] > 40) and (states.cover.jeff_garage_door.attributes["distance_sensor"] < 130)) %}
              Yes
            {% else %}
              No
            {% endif %}
            {% else %}
            n/a
            {% endif %}'
      garage2_status:
        friendly_name: 'Jen''s garage door status'
        value_template: '{% if states.cover.jen_garage_door %}
            {% if states.cover.jen_garage_door.attributes["door_state"] == "open" %}
              Open
            {% elif states.cover.jen_garage_door.attributes["door_state"] == "closed" %}
              Closed
            {% elif states.cover.jen_garage_door.attributes["door_state"] == "opening" %}
              Opening
            {% elif states.cover.jen_garage_door.attributes["door_state"] == "closing" %}
              Closing
            {% elif states.cover.jen_garage_door.attributes["door_state"] == "offline" %}
              Offline
            {% else %}
              Unknown
            {% endif %}
            {% else %}
            n/a
            {% endif %}'
      garage2_car_present:
        friendly_name: 'Jen''s car in garage'
        value_template: '{% if states.cover.jen_garage_door %}
            {% if states.cover.jen_garage_door.state == "open" %}
              n/a
            {% elif ((states.cover.jen_garage_door.attributes["distance_sensor"] > 40) and (states.cover.jen_garage_door.attributes["distance_sensor"] < 130)) %}
              Yes
            {% else %}
              No
            {% endif %}
            {% else %}
            n/a
            {% endif %}'

  - platform: template
    sensors:
      alarm_status:
        friendly_name: 'Alarm Status'
        value_template: "{% if is_state('sensor.alarm_panel_display', 'ARMED ***AWAY***** ALL SECURE **') or is_state('sensor.alarm_panel_display', 'ARMED ***STAY***                ') %}Armed{%else%}Disarmed{% endif %}"



binary_sensor:
  - platform: ring
    monitored_conditions:
      - ding
      - motion

group: !include groups.yaml

notify:
  - name: slack
    platform: slack
    api_key: !secret slack-api_key
    default_channel: '#home'

nest:
  client_id: !secret nest-client_id
  client_secret: !secret nest-client_secret


device_tracker:
  - platform: owntracks_http
    max_gps_accuracy: 200
    waypoints: True
  - platform: unifi
    username: !secret unifi-username
    password: !secret unifi-password
    host: !secret unifi-host
    port: 443
    detection_time: 180
    consider_home: 180


influxdb:
  host: !secret influxdb-host
  max_retries: 10

ring:
  username: !secret ring-username
  password: !secret ring-password

# zwave:
#  usb_path: /dev/ttyACM0

