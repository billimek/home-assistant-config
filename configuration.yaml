homeassistant:
  # Name of the location where Home Assistant is running
  name: Home
  # Location required to calculate the time the sun rises and sets
  latitude: !env_var LATITUDE
  longitude: !env_var LONGITUDE
  # Impacts weather/sunrise data (altitude above sea level in meters)
  elevation: 318
  # metric for Metric, imperial for Imperial
  unit_system: us_customary
  country: US
  currency: USD
  # Pick yours from here: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones
  time_zone: America/New_York

  external_url: https://hass.eviljungle.com
  internal_url: https://hass.eviljungle.com

  auth_providers:
    - type: homeassistant

# Packages
  packages:
    security: !include security.yaml

  allowlist_external_dirs:
    - /config/www/camera

default_config:

logger:
  default: info
  logs:
    homeassistant.components.automation.jeff_phone_espresense: warning
    homeassistant.components.automation.jeff_watch_espresense: warning
    homeassistant.components.automation.jen_phone_espresense: warning
    homeassistant.components.automation.jen_watch_espresense: warning
    homeassistant.components.automation.ansley_phone_espresense: warning
    homeassistant.components.automation.ansley_watch_espresense: warning
    homeassistant.components.automation.brinley_phone_espresense: warning
    homeassistant.components.automation.update_tesla2_location_as_mqtt_location_updates: warning
    homeassistant.components.automation.update_tesla_location_as_mqtt_location_updates: warning
  #   homeassistant.components.alarm_control_panel: debug
  #   homeassistant.components.alarmdecoder: debug
  #   homeassistant.components.sensor.alarm_panel_display: debug
  #   alarmdecoder: debug
  #   homeassistant.components.mqtt: debug
  #   hacs: debug
  #   aiogithubapi: debug
  #   homeassistant.components.websocket_api: debug
  #   homeassistant.core: debug

http:
  ip_ban_enabled: false
  login_attempts_threshold: 5
  use_x_forwarded_for: true
  trusted_proxies:
    - 10.2.0.0/24
    - 10.42.0.0/16
    - 10.43.0.0/16
    - 10.0.7.0/24
    - 10.0.6.0/24
    - 10.0.2.0/24


# Discover some devices automatically
# discovery:

# persist states between restarts
recorder:
  auto_purge: true
  purge_keep_days: 90

  exclude:
    entities:
      - sensor.date
      - sensor.date_time
      - sensor.time
      - sensor.time_utc
      - sensor.system_time_of_day_detailed

prometheus:
  namespace: hass

mqtt: !include config/mqtt.yaml
script: !include_dir_merge_named scripts
sensor: !include config/sensors.yaml
# My own handmade automations
automation manual: !include_dir_merge_list automation/
# Automations I create in the UI
automation ui: !include automations.yaml
shell_command: !include shell/shell.yaml
zone: !include config/zones.yaml
group: !include groups.yaml

input_select:
  set_biprofile:
    name: "Set BI Profile"
    initial: "-"
    options:
      - "-"
      - "home"
      - "away"
  presence:
    name: "People to track"
    initial: "family"
    options:
      - "family"
      - "parents"
      - "kids"

input_boolean:
  # garage stuff
  previous_garage_open:
    name: Track if the garage was previously open
    initial: on
  previous_garage2_open:
    name: Track if the garage2 was previously open
    initial: on
  previous_garage_closed:
    name: Track if the garage was previously closed
    initial: on
  previous_garage2_closed:
    name: Track if the garage2 was previously closed
    initial: on
  auto_garage_doors:
    name: Automatically open/close garage doors
    initial: on
  auto_garage_doors_night:
    name: Automatically close garage doors at night
    initial: on

  # people
  jeff_occupancy:
    name: Jeff is home (bluetooth)
  jen_occupancy:
    name: Jen is home (bluetooth)
  ansley_occupancy:
    name: Ansley is home (bluetooth)
  brinley_occupancy:
    name: Brinley is home (bluetooth)
  track_ansley:
      name: Track Ansley Presence
  track_brinley:
      name: Track Brinley Presence
  track_jen:
      name: Track Jen Presence
  track_jeff:
      name: Track Jeff Presence

  # auto-run stuff
  auto_run_basement_fan:
    name: Auto-run basement fan at noon, daily
    initial: on
  auto_arm_disarm_alarm_night:
    name: Arm alarm at midnight and disarm at 5am
  auto_close_garage_door_jen:
    name: Automatically close Jen's Garage Door if open for 30 mins
  auto_close_garage_door_jeff:
    name: Automatically close Jeff's Garage Door if open for 30 mins
  auto_arm_alarm_when_gone:
    name: Automatically arm alarm when no one is home
    initial: on
  auto_disarm_alarm_when_home:
    name: Automatically disarm alarm when someone comes home
    initial: on
  
  # notifications
  camera_front_notify:
    name: Front camera notifications
  camera_driveway_notify:
    name: Driveway camera notifications
  camera_porch_notify:
    name: Porch camera notifications
  camera_pool_notify:
    name: Pool camera notifications
  camera_basement_notify:
    name: Basement camera notifications
  camera_doorbell_notify:
    name: Doorbell camera notifications
  notify_alarm_armed:
    name: Notification when alarm is armed
    initial: on
  notify_alarm_disarmed:
    name: Notification when alarm is disarmed
    initial: on
  notify_alarm_triggered:
    name: Notification when alarm is triggered
    initial: on
  notify_garage_doors_home:
    name: Notification when garage doors are open/closed and we are home
    initial: on
  notify_garage_doors_away:
    name: Notification when garage doors are open/closed and we are away
    initial: on

binary_sensor:
  #### sulaco (teslamate car 1)
  - platform: template
    sensors:
      tesla_park_brake:
        friendly_name: Parking Brake
        icon_template: mdi:car-brake-parking
        value_template: >-
          {% if is_state('sensor.tesla_shift_state', 'P') %}
            ON
          {% else %}
            OFF
          {% endif %}
  #### KARR (teslamate car 2)
  - platform: template
    sensors:
      tesla2_park_brake:
        friendly_name: Parking Brake
        icon_template: mdi:car-brake-parking
        value_template: >-
          {% if is_state('sensor.tesla2_shift_state', 'P') %}
            ON
          {% else %}
            OFF
          {% endif %}

notify:
  - name: ALL_DEVICES
    platform: group
    services:
      - service: mobile_app_jeffsphone
      - service: mobile_app_jensphone

influxdb:
  host: influxdb.monitoring
  port: 8086
  max_retries: 10

google_assistant:
  project_id: home-assistant-7c48d
  secure_devices_pin: !env_var SECURE_DEVICES_PIN 
  service_account: !include home-assistant-4d8d1f2ca10f.json
  report_state: true

# proximity:
#   home:
#     zone: home
#     ignored_zones:
#       - Work
#       - SSC
#       - Jens Work
#     devices:
#       - device_tracker.jeffs_iphone
#       - device_tracker.jensphone
#       - device_tracker.ansleys_iphone_2
#       - device_tracker.brinleythebest2
#     tolerance: 50
#     unit_of_measurement: m
#   home_tesla:
#     zone: home
#     devices:
#       - device_tracker.tesla_location
#     tolerance: 50
#     unit_of_measurement: m
#   home_tesla2:
#     zone: home
#     devices:
#       - device_tracker.tesla2_location
#     tolerance: 50
#     unit_of_measurement: m
#   home_jeffs_phone:
#     zone: home
#     devices:
#       - device_tracker.jeffs_iphone
#     tolerance: 50
#     unit_of_measurement: m
#   home_jens_phone:
#     zone: home
#     devices:
#       - device_tracker.jensphone
#     tolerance: 50
#     unit_of_measurement: m
#   home_ansleys_phone:
#     zone: home
#     devices:
#       - device_tracker.ansleys_iphone_2
#     tolerance: 50
#     unit_of_measurement: m
#   home_brinleys_phone:
#     zone: home
#     devices:
#       - device_tracker.brinleythebest2
#     tolerance: 50
#     unit_of_measurement: m

tts:
  - platform: google_translate
    cache: false
    # cache_dir: /tmp/tts
    time_memory: 300
    service_name: google_say

rest_command:
  enable_blocky:
    url: 'http://blocky.default.svc.cluster.local:4000/api/blocking/enable'
  disable_blocky_5m:
    url: 'http://blocky.default.svc.cluster.local:4000/api/blocking/disable?300'
  wake_wsl:
      url: 'https://opnsense.eviljungle.com:1443/api/wol/wol/set'
      method: POST
      payload: '{"wake":{"interface": "opt3","mac": "d4:5d:64:b4:d8:33"}}'
      content_type:  'application/json'
      username: !env_var OPNSENSE_USER 
      password: !env_var OPNSENSE_KEY

o365:
  accounts:
    - account_name: Account1
      alt_auth_method: True
      client_secret: !env_var O365_CLIENT_SECRET
      client_id: !env_var O365_APP_ID
